// Generated by Haxe 4.0.0-rc.2+77068e1
(function () { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	haxe_Log.trace("Hello haxe",{ fileName : "Main.hx", lineNumber : 7, className : "Main", methodName : "main"});
	var ui1 = new ui_UI();
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var ui_Game = function(ui_) {
	this.playerColor = 0;
	this.sideToMove = 0;
	this.board = [];
	this.sfen = "lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL w - 1 moves";
	haxe_Log.trace("Game::new",{ fileName : "ui/Game.hx", lineNumber : 13, className : "ui.Game", methodName : "new"});
	this.ui = ui_;
};
ui_Game.__name__ = true;
ui_Game.prototype = {
	start: function() {
		haxe_Log.trace("Game::start",{ fileName : "ui/Game.hx", lineNumber : 18, className : "ui.Game", methodName : "start"});
		this.setPosition(this.sfen);
	}
	,setPosition: function(sfen) {
		haxe_Log.trace("Game::setPosition",{ fileName : "ui/Game.hx", lineNumber : 23, className : "ui.Game", methodName : "setPosition", customParams : [sfen]});
		var tokens = sfen.split(" ");
		var f = 8;
		var r = 0;
		var promote = false;
		var i = 0;
		var token = "";
		var sq = 0;
		this.board = [];
		haxe_Log.trace(tokens,{ fileName : "ui/Game.hx", lineNumber : 32, className : "ui.Game", methodName : "setPosition"});
		var _g = 0;
		var _g1 = tokens[0].length;
		while(_g < _g1) {
			var i1 = _g++;
			var token1 = tokens[0].charAt(i1);
			haxe_Log.trace(i1,{ fileName : "ui/Game.hx", lineNumber : 35, className : "ui.Game", methodName : "setPosition", customParams : [token1]});
			if(util_StringUtil.isNumberString(token1)) {
				var _g2 = 0;
				var _g11 = Std.parseInt(token1);
				while(_g2 < _g11) {
					var n = _g2++;
					sq = f * 9 + r;
					this.board[sq] = 0;
					--f;
				}
			} else if(token1 == "+") {
				promote = true;
			} else if(token1 == "/") {
				f = 8;
				++r;
			} else {
				sq = f * 9 + r;
				var pt = this.getPieceType(token1);
				if(promote) {
					pt += 8;
				}
				this.board[sq] = pt;
				--f;
				promote = false;
			}
		}
		this.updateUi();
	}
	,updateUi: function() {
		var _g = 0;
		while(_g < 81) {
			var sq = _g++;
			this.ui.setCell(sq,this.board[sq]);
		}
	}
	,getPieceColor: function(pt) {
		if(pt == 0) {
			return -1;
		}
		if(pt < 16) {
			return 0;
		} else {
			return 1;
		}
	}
	,getPieceType: function(token) {
		switch(token) {
		case "B":
			return 5;
		case "G":
			return 7;
		case "K":
			return 8;
		case "L":
			return 2;
		case "N":
			return 3;
		case "P":
			return 1;
		case "R":
			return 6;
		case "S":
			return 4;
		case "b":
			return 21;
		case "g":
			return 23;
		case "k":
			return 24;
		case "l":
			return 18;
		case "n":
			return 19;
		case "p":
			return 17;
		case "r":
			return 22;
		case "s":
			return 20;
		default:
			return 0;
		}
	}
};
var ui_UI = function() {
	this.selectedSq = 0;
	this.operationMode = 0;
	haxe_Log.trace("UI::New",{ fileName : "ui/UI.hx", lineNumber : 11, className : "ui.UI", methodName : "new"});
	window.onload = $bind(this,this.onLoad);
	this.game = new ui_Game(this);
};
ui_UI.__name__ = true;
ui_UI.prototype = {
	onLoad: function() {
		haxe_Log.trace("haxe onload",{ fileName : "ui/UI.hx", lineNumber : 17, className : "ui.UI", methodName : "onLoad"});
		this.game.start();
	}
	,getPieceLabel: function(pt) {
		switch(pt % 16) {
		case 0:
			return "　";
		case 1:
			return "歩";
		case 2:
			return "香";
		case 3:
			return "桂";
		case 4:
			return "銀";
		case 5:
			return "角";
		case 6:
			return "飛";
		case 7:
			return "金";
		case 8:
			return "玉";
		case 9:
			return "と";
		case 10:
			return "と";
		case 11:
			return "杏";
		case 12:
			return "圭";
		case 13:
			return "全";
		case 14:
			return "馬";
		case 15:
			return "龍";
		default:
			return "　";
		}
	}
	,setCell: function(sq,pt) {
		var c = this.game.getPieceColor(pt);
		var s = "" + this.getPieceLabel(pt);
		if(this.operationMode == 0) {
			haxe_Log.trace("setCell sq:",{ fileName : "ui/UI.hx", lineNumber : 45, className : "ui.UI", methodName : "setCell", customParams : [sq,"pt:",pt,"ope:",this.operationMode,"c:",c,"side:",this.game.sideToMove]});
			if(this.game.sideToMove == c && pt > 0) {
				s = "<a href=\"javascript:pos.onClickCell(" + sq + ")\">" + s + "</a>";
			}
		} else if(this.operationMode == 1) {
			if(sq == this.selectedSq - 1) {
				s = "<a href=\"javascript:pos.onClickCell(" + sq + ")\">" + s + "</a>";
			}
		}
		var cell = window.document.getElementById("cell_" + sq);
		if(this.game.playerColor == c) {
			cell.style.transform = "";
		} else {
			cell.style.transform = "rotate(180deg)";
		}
		cell.innerHTML = s;
	}
};
var util_StringUtil = function() { };
util_StringUtil.__name__ = true;
util_StringUtil.isNumberString = function(s) {
	var r = new EReg("[0-9]+","");
	return r.match(s);
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Main.main();
})();
